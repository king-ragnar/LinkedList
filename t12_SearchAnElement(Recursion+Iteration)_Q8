class Node:
    
    def __init__(self,data):
        self.data = data
        self.next = None

class LinkedList:
    
    def __init__(self):
        self.head = None
    
    def insertfront(self,Node):
        if self.head is None:
            self.head = Node
        else:
            Node.next = self.head
            self.head = Node
    
    #Normal Iteration Method
    def search(self,element):
        temp = self.head
        while temp :
            if temp.data == element:
                print("Element Present")
                return
            else:
                temp = temp.next
        print("element not present")
        
    def searchr(self,Node,element):
        if Node is None:
            return False
        else:
            if Node.data == element:
                return True
            else:
                return self.searchr(Node.next,element)
        
    def recursiveSearch(self,element):
        if self.searchr(self.head,element):
            print("Element Present")
        else:
            print("Element Not Present")
        
        
n1= Node(10)
n2 = Node(20)
l = LinkedList()
l.insertfront(n1)

l.insertfront(n2)
l.insertfront(Node(30))
l.search(10) #Normal Iteration Method 
l.recursiveSearch(10)#Recursion Method
