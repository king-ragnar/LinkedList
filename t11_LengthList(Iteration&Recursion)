class Node:
    
    def __init__(self,data):
        self.data = data
        self.next = None

class LinkedList:
    
    def __init__(self):
        self.head = None
    
    def insertfront(self,Node):
        if self.head is None:
            self.head = Node
        else:
            Node.next = self.head
            self.head = Node
    
    #Normal Iteration Method
    def length(self):
        count = 0
        temp = self.head
        while(temp is not None):
            count+=1
            temp = temp.next
        
        print(count)
        
    #Recursion method
    def lengthr(self,Node):
        if Node is None:
            return 0
        else:
            return 1+self.lengthr(Node.next)
        
        
        
n1= Node(10)
n2 = Node(20)
l = LinkedList()
l.insertfront(n1)

l.insertfront(n2)
l.insertfront(Node(30))
l.length() #Normal Iteration method call
print(l.lengthr(l.head)) #Recursion call
